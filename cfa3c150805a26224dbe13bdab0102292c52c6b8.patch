From cfa3c150805a26224dbe13bdab0102292c52c6b8 Mon Sep 17 00:00:00 2001
From: tsujan <tsujan2000@gmail.com>
Date: Mon, 1 Aug 2022 11:46:59 +0430
Subject: [PATCH] Invalidate GTK icon cache as soon as icons are installed
 (#284)

Monitoring the GTK cache itself wasn't enough for showing real icons of newly installed apps (in Main Menu). Contrary to my expectations, the reason was that the cache was invalidated too late.

Here, the folder is monitored instead, and the cache is invalidated as soon as something happens inside the folder. It will be validated again when it's updated.

Closes https://github.com/lxqt/libqtxdg/issues/226
---
 src/xdgiconloader/xdgiconloader.cpp | 17 +++++------------
 1 file changed, 5 insertions(+), 12 deletions(-)

diff --git a/src/xdgiconloader/xdgiconloader.cpp b/src/xdgiconloader/xdgiconloader.cpp
index 91515ca..217eca1 100644
--- a/src/xdgiconloader/xdgiconloader.cpp
+++ b/src/xdgiconloader/xdgiconloader.cpp
@@ -149,14 +149,12 @@ QIconCacheGtkReader::QIconCacheGtkReader(const QString &dirName)
     // Note: The cache file can be (IS) removed and newly created during the
     // cache update. But we hold open file descriptor for the "old" removed
     // file. So we need to watch the changes and reopen/remap the file.
-    QObject::connect(gtkCachesWatcher(), &QFileSystemWatcher::fileChanged, &m_file, [this](const QString & path)
+    gtkCachesWatcher->addPath(dirName);
+    QObject::connect(gtkCachesWatcher(), &QFileSystemWatcher::directoryChanged, &m_file, [this]
         {
-            if (m_file.fileName() == path)
-            {
-                m_isValid = false;
-                // invalidate icons to reload them ...
-                QIconLoader::instance()->invalidateKey();
-            }
+            m_isValid = false;
+            // invalidate icons to reload them ...
+            QIconLoader::instance()->invalidateKey();
         });
     reValid(false);
 }
@@ -175,11 +173,6 @@ bool QIconCacheGtkReader::reValid(bool infoRefresh)
     if (!m_cacheFileInfo.exists() || m_cacheFileInfo.lastModified() < QFileInfo{dir.absolutePath()}.lastModified())
         return m_isValid;
 
-    // Note: If the file is removed, it is also silently removed from watched
-    // paths in QFileSystemWatcher.
-    if (!gtkCachesWatcher->files().contains(m_cacheFileInfo.absoluteFilePath()))
-        gtkCachesWatcher->addPath(m_cacheFileInfo.absoluteFilePath());
-
     if (!m_file.open(QFile::ReadOnly))
         return m_isValid;
     m_size = m_file.size();
